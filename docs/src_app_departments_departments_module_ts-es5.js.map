{"version":3,"sources":["webpack:///src/app/departments/add-department/add-department.component.html","webpack:///src/app/departments/add-department/add-department.component.ts","webpack:///src/app/departments/all-departments/all-departments.component.html","webpack:///src/app/departments/all-departments/all-departments.component.ts","webpack:///src/app/departments/all-departments/department.model.ts","webpack:///src/app/departments/all-departments/department.service.ts","webpack:///src/app/departments/all-departments/dialogs/delete/delete.component.ts","webpack:///src/app/departments/all-departments/dialogs/delete/delete.component.html","webpack:///src/app/departments/all-departments/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/departments/all-departments/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/departments/departments-routing.module.ts","webpack:///src/app/departments/departments.module.ts","webpack:///src/app/departments/edit-department/edit-department.component.html","webpack:///src/app/departments/edit-department/edit-department.component.ts"],"names":["AddDepartmentComponent","fb","departmentForm","group","dName","Validators","hod","phone","email","sYear","totalStaff","details","console","log","value","onSubmit","$event","stopPropagation","selection","AllDepartmentsComponent","httpClient","dialog","departmentService","snackBar","displayedColumns","SelectionModel","contextMenuPosition","x","y","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","department","action","direction","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","DepartmentService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","MatPaginator","MatSort","MatMenuTrigger","removeSelectedRows","addNew","refresh","_exampleDatabase","_paginator","_sort","_filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllDepartments","merge","pipe","map","slice","searchStr","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","Department","getRandomID","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","name","message","close","deleteDepartment","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","createContactForm","hasError","addDepartment","getRawValue","provide","MAT_DATE_LOCALE","useValue","confirmAdd","routes","path","component","EditDepartmentComponent","DepartmentsRoutingModule","RouterModule","DepartmentsModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatCheckboxModule","MatToolbarModule","MatCardModule","MatSelectModule","MaterialFileInputModule","MatDatepickerModule","MatMenuModule","MatProgressSpinnerModule","formdata"],"mappings":"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","file":"src_app_departments_departments_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Department</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Department</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add Department</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Add Department</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Department</mat-label>\r\n                    <mat-select formControlName=\"dName\" required>\r\n                      <mat-option [value]=\"'Housekeeping'\">\r\n                        Housekeeping\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Food and Beverage'\">\r\n                        Food and Beverage\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen'\">\r\n                        Kitchen\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Accounts'\">\r\n                        Accounts\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Security'\">\r\n                        Security\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase'\">\r\n                        Purchase\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Head Of Department</mat-label>\r\n                    <input matInput formControlName=\"hod\" required>\r\n                    <mat-icon matSuffix>person</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                      HOD name required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Phone</mat-label>\r\n                    <input matInput formControlName=\"phone\">\r\n                    <mat-icon matSuffix>phone</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                      Phone is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-icon matSuffix>email</mat-icon>\r\n                    <mat-error\r\n                      *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Total Staff</mat-label>\r\n                    <input matInput formControlName=\"totalStaff\" required>\r\n                    <mat-icon matSuffix>group</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('totalStaff').hasError('required')\">\r\n                      Total staff is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Details</mat-label>\r\n                    <textarea matInput formControlName=\"details\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-add-department',\r\n  templateUrl: './add-department.component.html',\r\n  styleUrls: ['./add-department.component.sass']\r\n})\r\nexport class AddDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.fb.group({\r\n      dName: ['', [Validators.required]],\r\n      hod: ['', [Validators.required]],\r\n      phone: ['', [Validators.required]],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      sYear: [''],\r\n      totalStaff: ['', [Validators.required]],\r\n      details: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Departments</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Departments</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"responsive_table\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Departments</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"dName\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Department Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.dName}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"hod\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Head Of Department\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.hod}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"phone\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Phone</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.phone }}\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"totalStaff\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Total Staff\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.totalStaff}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { DepartmentService } from './department.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Department } from './department.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-departments',\r\n  templateUrl: './all-departments.component.html',\r\n  styleUrls: ['./all-departments.component.sass'],\r\n})\r\nexport class AllDepartmentsComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'dName',\r\n    'hod',\r\n    'phone',\r\n    'email',\r\n    'totalStaff',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: DepartmentService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Department>(true, []);\r\n  id: number;\r\n  department: Department | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public departmentService: DepartmentService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: this.department,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.departmentService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        department: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.departmentService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Department>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new DepartmentService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Department) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Department> {\r\n  _filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  filteredData: Department[] = [];\r\n  renderedData: Department[] = [];\r\n  constructor(\r\n    public _exampleDatabase: DepartmentService,\r\n    public _paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Department[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this._exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this._filterChange,\r\n      this._paginator.page,\r\n    ];\r\n    this._exampleDatabase.getAllDepartments();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this._exampleDatabase.data\r\n          .slice()\r\n          .filter((department: Department) => {\r\n            const searchStr = (\r\n              department.dName +\r\n              department.hod +\r\n              department.phone +\r\n              department.email\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this._paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Department[]): Department[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'dName':\r\n          [propertyA, propertyB] = [a.dName, b.dName];\r\n          break;\r\n        case 'hod':\r\n          [propertyA, propertyB] = [a.hod, b.hod];\r\n          break;\r\n        case 'phone':\r\n          [propertyA, propertyB] = [a.phone, b.phone];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","export class Department {\r\n  id: number;\r\n  dName: string;\r\n  hod: string;\r\n  phone: string;\r\n  email: string;\r\n  totalStaff: string;\r\n  constructor(department) {\r\n    {\r\n      this.id = department.id || this.getRandomID();\r\n      this.dName = department.dName || '';\r\n      this.hod = department.hod || '';\r\n      this.phone = department.phone || '';\r\n      this.email = department.email || '';\r\n      this.totalStaff = department.totalStaff || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Department } from './department.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class DepartmentService {\r\n  private readonly API_URL = 'assets/data/department.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Department[]> = new BehaviorSubject<Department[]>(\r\n    []\r\n  );\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Department[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllDepartments(): void {\r\n    this.httpClient.get<Department[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  // DEMO ONLY, you can find working methods below\r\n  addDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n  }\r\n  updateDepartment(department: Department): void {\r\n    this.dialogData = department;\r\n  }\r\n  deleteDepartment(id: number): void {\r\n    console.log(id);\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.departmentService.deleteDepartment(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"fw-bold\"> Department Name: </span>{{data.dName}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"fw-bold\"> HOD: </span>{{ data.hod }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"fw-bold\">Mobile: </span>{{data.phone}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"fw-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Department</mat-label>\r\n            <mat-select formControlName=\"dName\" required>\r\n              <mat-option [value]=\"'Housekeeping'\">\r\n                Housekeeping\r\n              </mat-option>\r\n              <mat-option [value]=\"'Food and Beverage'\">\r\n                Food and Beverage\r\n              </mat-option>\r\n              <mat-option [value]=\"'Kitchen'\">\r\n                Kitchen\r\n              </mat-option>\r\n              <mat-option [value]=\"'Accounts'\">\r\n                Accounts\r\n              </mat-option>\r\n              <mat-option [value]=\"'Security'\">\r\n                Security\r\n              </mat-option>\r\n              <mat-option [value]=\"'Transport'\">\r\n                Transport\r\n              </mat-option>\r\n              <mat-option [value]=\"'Purchase'\">\r\n                Purchase\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n              Select Any Department\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Head Of Department</mat-label>\r\n            <input matInput formControlName=\"hod\" required>\r\n            <mat-icon matSuffix>person</mat-icon>\r\n            <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n              HOD name required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Phone</mat-label>\r\n            <input matInput formControlName=\"phone\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n              Phone is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\" col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Total Staff</mat-label>\r\n            <input matInput formControlName=\"totalStaff\" required>\r\n            <mat-icon matSuffix>group</mat-icon>\r\n            <mat-error *ngIf=\"departmentForm.get('totalStaff').hasError('required')\">\r\n              Total staff is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!departmentForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { DepartmentService } from '../../department.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Department } from '../../department.model';\r\nimport { MAT_DATE_LOCALE } from '@angular/material/core';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n  providers: [{ provide: MAT_DATE_LOCALE, useValue: 'en-GB' }]\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  departmentForm: FormGroup;\r\n  department: Department;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public departmentService: DepartmentService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.department.dName;\r\n      this.department = data.department;\r\n    } else {\r\n      this.dialogTitle = 'New Department';\r\n      this.department = new Department({});\r\n    }\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.department.id],\r\n      dName: [this.department.dName, [Validators.required]],\r\n      hod: [this.department.hod, [Validators.required]],\r\n      phone: [this.department.phone, [Validators.required]],\r\n      email: [\r\n        this.department.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      totalStaff: [this.department.totalStaff, [Validators.required]]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.departmentService.addDepartment(this.departmentForm.getRawValue());\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-departments',\r\n    component: AllDepartmentsComponent\r\n  },\r\n  {\r\n    path: 'add-department',\r\n    component: AddDepartmentComponent\r\n  },\r\n  {\r\n    path: 'edit-department',\r\n    component: EditDepartmentComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class DepartmentsRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\n\r\nimport { DepartmentsRoutingModule } from './departments-routing.module';\r\nimport { AddDepartmentComponent } from './add-department/add-department.component';\r\nimport { EditDepartmentComponent } from './edit-department/edit-department.component';\r\nimport { AllDepartmentsComponent } from './all-departments/all-departments.component';\r\nimport { DeleteDialogComponent } from './all-departments/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-departments/dialogs/form-dialog/form-dialog.component';\r\nimport { DepartmentService } from './all-departments/department.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AddDepartmentComponent,\r\n    EditDepartmentComponent,\r\n    AllDepartmentsComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatCheckboxModule,\r\n    MatToolbarModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MaterialFileInputModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    DepartmentsRoutingModule,\r\n  ],\r\n  providers: [DepartmentService],\r\n})\r\nexport class DepartmentsModule {}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Department</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Department</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit Department</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Department</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"departmentForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Department</mat-label>\r\n                    <mat-select formControlName=\"dName\" required>\r\n                      <mat-option [value]=\"'Housekeeping'\">\r\n                        Housekeeping\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Food and Beverage'\">\r\n                        Food and Beverage\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen'\">\r\n                        Kitchen\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Accounts'\">\r\n                        Accounts\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Security'\">\r\n                        Security\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase'\">\r\n                        Purchase\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"departmentForm.get('dName').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Head Of Department</mat-label>\r\n                    <input matInput formControlName=\"hod\" required>\r\n                    <mat-icon matSuffix>person</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('hod').hasError('required')\">\r\n                      HOD name required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Phone</mat-label>\r\n                    <input matInput formControlName=\"phone\">\r\n                    <mat-icon matSuffix>phone</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('phone').hasError('required')\">\r\n                      Phone is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-icon matSuffix>email</mat-icon>\r\n                    <mat-error\r\n                      *ngIf=\"departmentForm.get('email').hasError('required') || departmentForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Total staff</mat-label>\r\n                    <input matInput formControlName=\"totalStaff\" required>\r\n                    <mat-icon matSuffix>group</mat-icon>\r\n                    <mat-error *ngIf=\"departmentForm.get('totalStaff').hasError('required')\">\r\n                      Total staff is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\">\r\n                    <mat-label>Details</mat-label>\r\n                    <textarea matInput formControlName=\"details\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!departmentForm.valid \" mat-raised-button\r\n                    color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-edit-department',\r\n  templateUrl: './edit-department.component.html',\r\n  styleUrls: ['./edit-department.component.sass']\r\n})\r\nexport class EditDepartmentComponent {\r\n  departmentForm: FormGroup;\r\n  formdata = {\r\n    dName: 'Kitchen',\r\n    hod: 'Sanjay Shah',\r\n    phone: '123456789',\r\n    email: 'test@example.com',\r\n    totalStaff: '20',\r\n    details: 'Learn fashion designing course with proper guideline.'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.departmentForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.departmentForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      dName: [this.formdata.dName, [Validators.required]],\r\n      hod: [this.formdata.hod],\r\n      phone: [this.formdata.phone, [Validators.required]],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      totalStaff: [this.formdata.totalStaff],\r\n      details: [this.formdata.details]\r\n    });\r\n  }\r\n}\r\n"]}