{"version":3,"sources":["webpack:///src/app/staff/about-staff/about-staff.component.html","webpack:///src/app/staff/about-staff/about-staff.component.ts","webpack:///src/app/staff/add-staff/add-staff.component.html","webpack:///src/app/staff/add-staff/add-staff.component.ts","webpack:///src/app/staff/all-staff/all-staff.component.html","webpack:///src/app/staff/all-staff/all-staff.component.ts","webpack:///src/app/staff/all-staff/dialog/delete/delete.component.ts","webpack:///src/app/staff/all-staff/dialog/delete/delete.component.html","webpack:///src/app/staff/all-staff/dialog/form-dialog/form-dialog.component.html","webpack:///src/app/staff/all-staff/dialog/form-dialog/form-dialog.component.ts","webpack:///src/app/staff/all-staff/staff.model.ts","webpack:///src/app/staff/all-staff/staff.service.ts","webpack:///src/app/staff/edit-staff/edit-staff.component.html","webpack:///src/app/staff/edit-staff/edit-staff.component.ts","webpack:///src/app/staff/staff-routing.module.ts","webpack:///src/app/staff/staff.module.ts"],"names":["AboutStaffComponent","AddStaffComponent","fb","staff","staffForm","group","first","Validators","last","gender","mobile","password","conformPassword","designation","department","address","email","dob","education","uploadImg","console","log","value","valid","alert","newStaffAdd","subscribe","data","onSubmit","$event","stopPropagation","selection","AllstaffComponent","httpClient","dialog","staffService","snackBar","displayedColumns","SelectionModel","contextMenuPosition","x","y","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","action","direction","afterClosed","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","StaffService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","MatPaginator","MatSort","MatMenuTrigger","removeSelectedRows","addNew","refresh","_exampleDatabase","_paginator","_sort","_filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllStaffs","merge","pipe","map","slice","searchStr","name","date","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deleteStaff","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Staff","createContactForm","hasError","img","formatDate","getRawValue","addStaff","opened","openedChange","confirmAdd","getRandomID","avatar","Date","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","message","post","environment","EditStaffComponent","formdata","routes","path","component","StaffRoutingModule","RouterModule","StaffModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatCheckboxModule","MatTabsModule","MatDatepickerModule","MatMenuModule","MaterialFileInputModule","MatProgressSpinnerModule"],"mappings":"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pB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AAEA;;AAAoB;;AAAI;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAuF;;AAAM;;AAC7F;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA1L8B;;AAAA;;AAME;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;A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;AAAoC;;AAAK;;AAC3C;;AACA;;AAAmC;;AAAI;;AACzC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAU;;AAEhB;;AACA;;AACE;;AAA0C;AAAA,qBAAY,IAAAtJ,QAAA,EAAZ;AAAsB,aAAtB;;AACxC;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;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","file":"src_app_staff_staff_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Staff Profile</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Staff</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Profile</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <!-- Your content goes here  -->\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-lg-4 col-md-12\">\r\n        <div class=\"card\">\r\n          <div class=\"m-b-20\">\r\n            <div class=\"contact-grid\">\r\n              <div class=\"profile-header bg-dark\">\r\n                <div class=\"user-name\">Jayna Patil</div>\r\n                <div class=\"name-center\">Manager</div>\r\n              </div>\r\n              <img src=\"assets/images/user/usrbig2.jpg\" class=\"user-img\" alt=\"\">\r\n              <p>\r\n                456, Estern evenue, Courtage area,\r\n                <br />New York\r\n              </p>\r\n              <div>\r\n                <span class=\"phone\">\r\n                  <i class=\"material-icons\">phone</i>264-625-2583</span>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-4\">\r\n                  <h5>564</h5>\r\n                  <small>Following</small>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <h5>18k</h5>\r\n                  <small>Followers</small>\r\n                </div>\r\n                <div class=\"col-4\">\r\n                  <h5>565</h5>\r\n                  <small>Post</small>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div class=\"card\">\r\n          <mat-tab-group mat-align-tabs=\"start\">\r\n            <mat-tab label=\"About\">\r\n              <div class=\"p-4\">\r\n                <p class=\"text-default\">Lorem Ipsum is simply dummy text of the printing and\r\n                  typesetting industry. Lorem Ipsum has\r\n                  been the industry's standard dummy text ever since the 1500s, when an unknown\r\n                  printer\r\n                  took a galley of type and scrambled it to make a type specimen book. It has\r\n                  survived\r\n                  not only five centuries, but also the leap into electronic typesetting, remaining\r\n                  essentially\r\n                  unchanged.</p>\r\n                <small class=\"text-muted\">Email address: </small>\r\n                <p>john@gmail.com</p>\r\n                <hr>\r\n                <small class=\"text-muted\">Phone: </small>\r\n                <p>+91 1234567890</p>\r\n                <hr>\r\n              </div>\r\n            </mat-tab>\r\n            <mat-tab label=\"Skills\">\r\n              <ul class=\"list-unstyled p-4\">\r\n                <li>\r\n                  <div>Java</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-green width-per-45\" role=\"progressbar\" aria-valuenow=\"45\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>PHP</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-orange width-per-38\" role=\"progressbar\" aria-valuenow=\"38\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>Database</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-cyan width-per-39\" role=\"progressbar\" aria-valuenow=\"39\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n                <li>\r\n                  <div>Spring</div>\r\n                  <div class=\"progress skill-progress m-b-20\">\r\n                    <div class=\"progress-bar l-bg-purple width-per-70\" role=\"progressbar\" aria-valuenow=\"70\"\r\n                      aria-valuemin=\"0\" aria-valuemax=\"100\"></div>\r\n                  </div>\r\n                </li>\r\n              </ul>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </div>\r\n\r\n      <div class=\"col-lg-8 col-md-12\">\r\n        <div class=\"card\">\r\n          <mat-tab-group>\r\n            <mat-tab>\r\n              <ng-template mat-tab-label>\r\n                <mat-icon class=\"example-tab-icon msr-2\">face</mat-icon>\r\n                About Me\r\n              </ng-template>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>About</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <div class=\"row\">\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Full Name</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">Emily Smith</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Mobile</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">(123) 456 7890</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6 b-r\">\r\n                        <strong>Email</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">johndeo@example.com</p>\r\n                      </div>\r\n                      <div class=\"col-md-3 col-6\">\r\n                        <strong>Location</strong>\r\n                        <br>\r\n                        <p class=\"text-muted\">India</p>\r\n                      </div>\r\n                    </div>\r\n                    <p class=\"m-t-30\">Completed my graduation in Arts from the well known and\r\n                      renowned institution\r\n                      of India – SARDAR PATEL ARTS COLLEGE, BARODA in 2000-01, which was\r\n                      affiliated\r\n                      to M.S. University. I ranker in University exams from the same\r\n                      university\r\n                      from 1996-01.</p>\r\n                    <p>Worked as Professor and Head of the department at Sarda Collage, Rajkot,\r\n                      Gujarat\r\n                      from 2003-2015 </p>\r\n                    <p>Lorem Ipsum is simply dummy text of the printing and typesetting\r\n                      industry. Lorem\r\n                      Ipsum has been the industry's standard dummy text ever since the 1500s,\r\n                      when\r\n                      an unknown printer took a galley of type and scrambled it to make a\r\n                      type\r\n                      specimen book. It has survived not only five centuries, but also the\r\n                      leap\r\n                      into electronic typesetting, remaining essentially unchanged.</p>\r\n                    <br>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>Education</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul>\r\n                      <li>M.S.N.,Gujarat University, Ahmedabad,India.</li>\r\n                      <li>B.S.N.,Gujarat University, Ahmedabad, India.</li>\r\n                      <li>A.S.D.,Shaurashtra University, Rajkot, India</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <div class=\"col-lg-12 col-md-12 col-sm-12\">\r\n                <div class=\"project_widget\">\r\n                  <div class=\"header\">\r\n                    <h2><strong>Experience</strong></h2>\r\n                  </div>\r\n                  <div class=\"body\">\r\n                    <ul>\r\n                      <li>One year nursing internship from April-2009 to march-2010 at B. J.\r\n                        Medical College, Ahmedabad.</li>\r\n                      <li>I have worked as a part time Nursing in Apang manav mandal from 1st june\r\n                        2004 to 31st jan 2005.</li>\r\n                      <li>2.5 Years Worked at Mahatma Gandhi General Hospital, Surendranagar.</li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-tab>\r\n\r\n            <mat-tab>\r\n              <ng-template mat-tab-label>\r\n                <mat-icon class=\"example-tab-icon msr-2\">settings</mat-icon>\r\n                Settings\r\n              </ng-template>\r\n              <div class=\"header\">\r\n                <h2>\r\n                  <strong>Security</strong> Settings</h2>\r\n              </div>\r\n              <div class=\"body\">\r\n                <div class=\"example-container\">\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>Username</mat-label>\r\n                    <input matInput>\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>Current Password</mat-label>\r\n                    <input matInput type=\"password\">\r\n                  </mat-form-field>\r\n                  <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                    <mat-label>New Password</mat-label>\r\n                    <input matInput type=\"password\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <button mat-raised-button color=\"primary\">Save</button>\r\n              </div>\r\n              <div class=\"header\">\r\n                <h2>\r\n                  <strong>Account</strong> Settings</h2>\r\n              </div>\r\n              <div class=\"body\">\r\n                <div class=\"row clearfix\">\r\n                  <div class=\"col-lg-6 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>First Name</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-6 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Last Name</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>City</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Email</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-lg-4 col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Country</mat-label>\r\n                        <input matInput>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-form-field class=\"example-full-width\" appearance=\"fill\">\r\n                        <mat-label>Address</mat-label>\r\n                        <textarea matInput></textarea>\r\n                      </mat-form-field>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">Profile Visibility For Everyone\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">New task notifications\r\n                      </mat-checkbox>\r\n                    </div>\r\n                    <div class=\"form-group\">\r\n                      <mat-checkbox class=\"example-margin\">New friend request notifications\r\n                      </mat-checkbox>\r\n                    </div>\r\n                  </div>\r\n                  <div class=\"col-md-12\">\r\n                    <button mat-raised-button color=\"primary\">Save Changes</button>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </mat-tab>\r\n          </mat-tab-group>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-about-staff',\r\n  templateUrl: './about-staff.component.html',\r\n  styleUrls: ['./about-staff.component.sass']\r\n})\r\nexport class AboutStaffComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Staff</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Staffs</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2><strong> Staff Information</strong></h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"staffForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <mat-select formControlName=\"designation\" required>\r\n                      <mat-option [value]=\"'Cook'\">\r\n                        Cook\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen Manager'\">\r\n                        Kitchen Manager\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Casino Host'\">\r\n                        Casino Host\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Driver'\">\r\n                        Driver\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase Officer'\">\r\n                        Purchase Officer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Receptionist'\">\r\n                        Receptionist\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Events Manager'\">\r\n                        Events Manager\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('designation').hasError('required')\">\r\n                      Designation is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'Housekeeping'\">\r\n                        Housekeeping\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Food and Beverage'\">\r\n                        Food and Beverage\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen'\">\r\n                        Kitchen\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Accounts'\">\r\n                        Accounts\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Security'\">\r\n                        Security\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase'\">\r\n                        Purchase\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('email').hasError('email') && staffForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"staffForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Upload Image</mat-label>\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!staffForm.valid \" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { StaffService } from '../all-staff/staff.service';\r\n@Component({\r\n  selector: 'app-add-staff',\r\n  templateUrl: './add-staff.component.html',\r\n  styleUrls: ['./add-staff.component.sass']\r\n})\r\nexport class AddStaffComponent {\r\n  staffForm: FormGroup;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private staff : StaffService\r\n    ) {\r\n    this.staffForm = this.fb.group({\r\n      first: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\r\n      last: [''],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      conformPassword: ['', [Validators.required]],\r\n      designation: [''],\r\n      department: [''],\r\n      address: [''],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      dob: ['', [Validators.required]],\r\n      education: [''],\r\n      uploadImg: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.staffForm.value);\r\n    if(!this.staffForm.valid){\r\n      return alert('fill the proper data')\r\n    }\r\n    this.staff.newStaffAdd(this.staffForm.value).subscribe((data)=>{\r\n      console.log(data,40)\r\n    })\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Staff</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Staff</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n        <div class=\"card\">\r\n          <div class=\"body\">\r\n            <div class=\"table-responsive\">\r\n              <div class=\"materialTableHeader\">\r\n                <div class=\"row\">\r\n                  <div class=\"col-8\">\r\n                    <ul class=\"header-buttons-left ml-0\">\r\n                      <li class=\"dropdown\">\r\n                        <h2>\r\n                          <strong>Staff</strong></h2>\r\n                      </li>\r\n                      <li class=\"dropdown m-l-20\">\r\n                        <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                        <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                          aria-label=\"Search box\">\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                          <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                            <mat-icon class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                  <div class=\"col-4\">\r\n                    <ul class=\"header-buttons\">\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                            <mat-icon class=\"col-white\">add</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                      <li>\r\n                        <div class=\"icon-button-demo\">\r\n                          <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                            <mat-icon class=\"col-white\">refresh</mat-icon>\r\n                          </button>\r\n                        </div>\r\n                      </li>\r\n                    </ul>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                <!-- Checkbox Column -->\r\n                <ng-container matColumnDef=\"select\">\r\n                  <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                      [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                      [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                    <mat-checkbox (click)=\"$event.stopPropagation()\" (change)=\"$event ? selection.toggle(row) : null\"\r\n                      [checked]=\"selection.isSelected(row)\" [ngClass]=\"'tbl-checkbox'\">\r\n                    </mat-checkbox>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <!-- ID Column -->\r\n                <ng-container matColumnDef=\"id\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Id</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"img\">\r\n                  <mat-header-cell mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\"> Image\r\n                  </mat-header-cell>\r\n                  <mat-cell mat-cell *matCellDef=\"let row\" class=\"table-img tbl-col-width-per-6\"> <img\r\n                      [src]=\"row.img\" />\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"name\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Name</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.name}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"designation\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Designation</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.designation}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"mobile\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Mobile</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.mobile}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"email\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header>Email</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                    {{row.email}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"date\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-10'\">Joining Date\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-10'\">\r\n                    {{row.date | date: 'MM/dd/yyyy'}}</mat-cell>\r\n                </ng-container>\r\n                <ng-container matColumnDef=\"address\">\r\n                  <mat-header-cell *matHeaderCellDef mat-sort-header [ngClass]=\"'tbl-col-width-per-25'\">Address\r\n                  </mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"\r\n                    [ngClass]=\"'tbl-col-width-per-25'\">\r\n                    {{row.address}}</mat-cell>\r\n                </ng-container>\r\n                <!-- actions -->\r\n                <ng-container matColumnDef=\"actions\">\r\n                  <mat-header-cell *matHeaderCellDef class=\"pr-0\">Actions</mat-header-cell>\r\n                  <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"editCall(row)\">\r\n                      <mat-icon aria-label=\"Edit\" class=\"col-white\">edit</mat-icon>\r\n                    </button>\r\n                    <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\" (click)=\"$event.stopPropagation()\"\r\n                      (click)=\"deleteItem(row)\">\r\n                      <mat-icon aria-label=\"Delete\" class=\"col-white\">delete</mat-icon>\r\n                    </button>\r\n                  </mat-cell>\r\n                </ng-container>\r\n                <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\r\n                <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                  [style.cursor]=\"'pointer'\" matRipple>\r\n                </mat-row>\r\n              </mat-table>\r\n              <!-- Loading spinner -->\r\n              <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                </mat-progress-spinner>\r\n              </div>\r\n              <!-- context menu start -->\r\n              <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n              </div>\r\n              <mat-menu #contextMenu=\"matMenu\">\r\n                <ng-template matMenuContent let-item=\"item\">\r\n                  <button mat-menu-item (click)=\"addNew()\">\r\n                    <mat-icon>add_box</mat-icon>\r\n                    <span>Add Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"editCall(item)\">\r\n                    <mat-icon>create</mat-icon>\r\n                    <span>Edit Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                    <mat-icon>delete</mat-icon>\r\n                    <span>Delete Record</span>\r\n                  </button>\r\n                  <button mat-menu-item (click)=\"refresh()\">\r\n                    <mat-icon>refresh</mat-icon>\r\n                    <span>Refresh Record</span>\r\n                  </button>\r\n                  <button mat-menu-item disabled>\r\n                    <mat-icon>no_encryption</mat-icon>\r\n                    <span>Disable</span>\r\n                  </button>\r\n                  <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                    <mat-icon>list_alt</mat-icon>\r\n                    <span> Nested Menu</span>\r\n                  </button>\r\n                </ng-template>\r\n              </mat-menu>\r\n              <mat-menu #nestedmenu=\"matMenu\">\r\n                <button mat-menu-item>\r\n                  <mat-icon>mail_outline</mat-icon>\r\n                  <span>Item 1</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>call</mat-icon>\r\n                  <span>Item 2</span>\r\n                </button>\r\n                <button mat-menu-item>\r\n                  <mat-icon>chat</mat-icon>\r\n                  <span>Item 3</span>\r\n                </button>\r\n              </mat-menu>\r\n              <!-- context menu end -->\r\n              <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                No results\r\n              </div>\r\n              <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n              </mat-paginator>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { StaffService } from './staff.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Staff } from './staff.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { FormDialogComponent } from './dialog/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialog/delete/delete.component';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-staff',\r\n  templateUrl: './all-staff.component.html',\r\n  styleUrls: ['./all-staff.component.sass'],\r\n})\r\nexport class AllstaffComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'img',\r\n    'name',\r\n    'designation',\r\n    'mobile',\r\n    'email',\r\n    'date',\r\n    'address',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: StaffService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Staff>(true, []);\r\n  id: number;\r\n  staff: Staff | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public staffService: StaffService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        staff: this.staff,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataService\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.staffService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        staff: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.staffService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Staff>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new StaffService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Staff) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Staff> {\r\n  _filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  filteredData: Staff[] = [];\r\n  renderedData: Staff[] = [];\r\n  constructor(\r\n    public _exampleDatabase: StaffService,\r\n    public _paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Staff[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this._exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this._filterChange,\r\n      this._paginator.page,\r\n    ];\r\n    this._exampleDatabase.getAllStaffs();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this._exampleDatabase.data\r\n          .slice()\r\n          .filter((staff: Staff) => {\r\n            const searchStr = (\r\n              staff.name +\r\n              staff.designation +\r\n              staff.email +\r\n              staff.mobile +\r\n              staff.date +\r\n              staff.address\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this._paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Staff[]): Staff[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'name':\r\n          [propertyA, propertyB] = [a.name, b.name];\r\n          break;\r\n        case 'email':\r\n          [propertyA, propertyB] = [a.email, b.email];\r\n          break;\r\n        case 'date':\r\n          [propertyA, propertyB] = [a.date, b.date];\r\n          break;\r\n        case 'address':\r\n          [propertyA, propertyB] = [a.address, b.address];\r\n          break;\r\n        case 'mobile':\r\n          [propertyA, propertyB] = [a.mobile, b.mobile];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { StaffService } from '../../staff.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public staffService: StaffService\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.staffService.deleteStaff(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"fw-bold\"> Name: </span>{{data.name}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"fw-bold\"> Designation: </span>{{ data.designation }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"fw-bold\">Mobile: </span>{{data.mobile}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <img [src]='staff.img' alt=\"avatar\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"fw-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"staffForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Name</mat-label>\r\n            <input matInput formControlName=\"name\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"staffForm.get('name').hasError('required')\">\r\n              Name is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Designation</mat-label>\r\n            <mat-select formControlName=\"designation\" (openedChange)=\"openedChange($event)\" required>\r\n              <mat-option [value]=\"'Cook'\">\r\n                Cook\r\n              </mat-option>\r\n              <mat-option [value]=\"'Kitchen Manager'\">\r\n                Kitchen Manager\r\n              </mat-option>\r\n              <mat-option [value]=\"'Casino Host'\">\r\n                Casino Host\r\n              </mat-option>\r\n              <mat-option [value]=\"'Driver'\">\r\n                Driver\r\n              </mat-option>\r\n              <mat-option [value]=\"'Purchase Officer'\">\r\n                Purchase Officer\r\n              </mat-option>\r\n              <mat-option [value]=\"'Receptionist'\">\r\n                Receptionist\r\n              </mat-option>\r\n              <mat-option [value]=\"'Events Manager'\">\r\n                Events Manager\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"staffForm.get('designation').hasError('required')\">\r\n              Designation is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Mobile</mat-label>\r\n            <input matInput formControlName=\"mobile\" type=\"number\">\r\n            <mat-icon matSuffix>phone</mat-icon>\r\n            <mat-error *ngIf=\"staffForm.get('mobile').hasError('required')\">\r\n              Mobile is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Email</mat-label>\r\n            <input matInput formControlName=\"email\" required>\r\n            <mat-icon matSuffix>email</mat-icon>\r\n            <mat-error *ngIf=\"staffForm.get('email').hasError('required') || staffForm.get('email').touched\">\r\n              Please enter a valid email address\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Joining date</mat-label>\r\n            <input matInput [matDatepicker]=\"picker\" formControlName=\"date\">\r\n            <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n            <mat-datepicker #picker></mat-datepicker>\r\n            <mat-error *ngIf=\"staffForm.get('date').hasError('required')\">\r\n              Please select date\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Address</mat-label>\r\n            <textarea matInput formControlName=\"address\"></textarea>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!staffForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { StaffService } from '../../staff.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { Staff } from '../../staff.model';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass'],\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  staffForm: FormGroup;\r\n  staff: Staff;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public staffService: StaffService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = data.staff.name;\r\n      this.staff = data.staff;\r\n    } else {\r\n      this.dialogTitle = 'New Staff';\r\n      this.staff = new Staff({});\r\n    }\r\n    this.staffForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required,\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n      ? 'Not a valid email'\r\n      : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.staff.id],\r\n      img: [this.staff.img],\r\n      name: [this.staff.name],\r\n      email: [\r\n        this.staff.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      date: [\r\n        formatDate(this.staff.date, 'yyyy-MM-dd', 'en'),\r\n        [Validators.required],\r\n      ],\r\n      designation: [this.staff.designation],\r\n      address: [this.staff.address],\r\n      mobile: [this.staff.mobile],\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    console.log(this.staffForm.getRawValue(),7557)\r\n    this.staffService.addStaff(this.staffForm.getRawValue());  \r\n  }\r\n  openedChange(opened: boolean) {\r\n    console.log(opened ? 'opened' : 'closed');\r\n  }\r\n  designation =[\r\n    {id:1,name:\"\"},\r\n    {id:1,name:\"\"},\r\n    {id:1,name:\"\"},\r\n    {id:1,name:\"\"},\r\n    {id:1,name:\"\"},\r\n  ]\r\n}\r\n","import { formatDate } from '@angular/common';\r\nexport class Staff {\r\n  id: number;\r\n  img: string;\r\n  name: string;\r\n  email: string;\r\n  date: string;\r\n  address: string;\r\n  mobile: string;\r\n  designation: string;\r\n  constructor(staff) {\r\n    {\r\n      this.id = staff.id || this.getRandomID();\r\n      this.img = staff.avatar || 'assets/images/user/user1.jpg';\r\n      this.name = staff.name || '';\r\n      this.designation = staff.designation || '';\r\n      this.email = staff.email || '';\r\n      this.date = formatDate(new Date(), 'yyyy-MM-dd', 'en') || '';\r\n      this.address = staff.address || '';\r\n      this.mobile = staff.mobile || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject, Observable } from 'rxjs';\r\nimport { Staff } from './staff.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\nimport { environment } from 'src/environments/environment';\r\n@Injectable()\r\nexport class StaffService {\r\n  private readonly API_URL = 'assets/data/staff.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Staff[]> = new BehaviorSubject<Staff[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) { }\r\n  get data(): Staff[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllStaffs(): void {\r\n    this.httpClient.get<Staff[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  // DEMO ONLY, you can find working methods below\r\n  addStaff(staff: Staff): void {\r\n    this.dialogData = staff;\r\n  }\r\n  updateStaff(staff: Staff): void {\r\n    this.dialogData = staff;\r\n  }\r\n  deleteStaff(id: number): void {\r\n    console.log(id);\r\n  }\r\n  newStaffAdd(staff): Observable<any> {\r\n    return this.httpClient.post(`${environment.apiUrl}/staff/add`, staff)\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Staff</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Staff</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Staff</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"staffForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'Male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Female'\">\r\n                        Female\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <mat-select formControlName=\"designation\" required>\r\n                      <mat-option [value]=\"'Cook'\">\r\n                        Cook\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen Manager'\">\r\n                        Kitchen Manager\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Casino Host'\">\r\n                        Casino Host\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Driver'\">\r\n                        Driver\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase Officer'\">\r\n                        Purchase Officer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Receptionist'\">\r\n                        Receptionist\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Events Manager'\">\r\n                        Events Manager\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('designation').hasError('required')\">\r\n                      Designation is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'Housekeeping'\">\r\n                        Housekeeping\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Food and Beverage'\">\r\n                        Food and Beverage\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Kitchen'\">\r\n                        Kitchen\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Accounts'\">\r\n                        Accounts\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Security'\">\r\n                        Security\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Transport'\">\r\n                        Transport\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'Purchase'\">\r\n                        Purchase\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"staffForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"staffForm.get('email').hasError('email') && staffForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"staffForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"fill\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!staffForm.valid \" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-edit-staff',\r\n  templateUrl: './edit-staff.component.html',\r\n  styleUrls: ['./edit-staff.component.sass']\r\n})\r\nexport class EditStaffComponent {\r\n  staffForm: FormGroup;\r\n  formdata = {\r\n    first: 'Pooja',\r\n    last: 'Sarma',\r\n    gender: 'Female',\r\n    mobile: '123456789',\r\n    password: '123',\r\n    conformPassword: '123',\r\n    email: 'test@example.com',\r\n    designation: 'Cook',\r\n    department: 'Housekeeping',\r\n    address: '101, Elanxa, New Yourk',\r\n    dob: '1987-02-17T14:22:18Z',\r\n    education: 'B.Com.'\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.staffForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.staffForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern('[a-zA-Z]+')]\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      password: [this.formdata.password],\r\n      conformPassword: [this.formdata.conformPassword],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      designation: [this.formdata.designation],\r\n      department: [this.formdata.department],\r\n      address: [this.formdata.address],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      education: [this.formdata.education]\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllstaffComponent } from './all-staff/all-staff.component';\r\nimport { AddStaffComponent } from './add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './edit-staff/edit-staff.component';\r\nimport { AboutStaffComponent } from './about-staff/about-staff.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-staff',\r\n    component: AllstaffComponent\r\n  },\r\n  {\r\n    path: 'add-staff',\r\n    component: AddStaffComponent\r\n  },\r\n  {\r\n    path: 'edit-staff',\r\n    component: EditStaffComponent\r\n  },\r\n  {\r\n    path: 'about-staff',\r\n    component: AboutStaffComponent\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class StaffRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { StaffRoutingModule } from './staff-routing.module';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { AllstaffComponent } from './all-staff/all-staff.component';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { FormDialogComponent } from './all-staff/dialog/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './all-staff/dialog/delete/delete.component';\r\nimport { AddStaffComponent } from './add-staff/add-staff.component';\r\nimport { EditStaffComponent } from './edit-staff/edit-staff.component';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { AboutStaffComponent } from './about-staff/about-staff.component';\r\nimport { StaffService } from './all-staff/staff.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllstaffComponent,\r\n    FormDialogComponent,\r\n    DeleteDialogComponent,\r\n    AddStaffComponent,\r\n    EditStaffComponent,\r\n    AboutStaffComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatCheckboxModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatMenuModule,\r\n    MaterialFileInputModule,\r\n    MatProgressSpinnerModule,\r\n    StaffRoutingModule,\r\n  ],\r\n  providers: [StaffService],\r\n})\r\nexport class StaffModule {}\r\n"]}