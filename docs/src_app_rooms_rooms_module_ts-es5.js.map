{"version":3,"sources":["webpack:///src/app/rooms/add-room/add-room.component.html","webpack:///src/app/rooms/add-room/add-room.component.ts","webpack:///src/app/rooms/all-rooms/all-rooms.component.html","webpack:///src/app/rooms/all-rooms/all-rooms.component.ts","webpack:///src/app/rooms/all-rooms/dialogs/delete/delete.component.ts","webpack:///src/app/rooms/all-rooms/dialogs/delete/delete.component.html","webpack:///src/app/rooms/all-rooms/dialogs/form-dialog/form-dialog.component.html","webpack:///src/app/rooms/all-rooms/dialogs/form-dialog/form-dialog.component.ts","webpack:///src/app/rooms/all-rooms/rooms.model.ts","webpack:///src/app/rooms/all-rooms/rooms.service.ts","webpack:///src/app/rooms/edit-room/edit-room.component.html","webpack:///src/app/rooms/edit-room/edit-room.component.ts","webpack:///src/app/rooms/rooms-routing.module.ts","webpack:///src/app/rooms/rooms.module.ts"],"names":["AddRoomComponent","fb","roomForm","group","first","Validators","last","gender","mobile","password","conformPassword","designation","department","address","email","dob","education","uploadImg","console","log","value","onSubmit","$event","stopPropagation","selection","AllroomComponent","httpClient","dialog","roomService","snackBar","displayedColumns","SelectionModel","contextMenuPosition","x","y","loadData","tempDirection","localStorage","getItem","dialogRef","open","FormDialogComponent","data","room","action","direction","afterClosed","subscribe","result","exampleDatabase","dataChange","unshift","getDialogData","refreshTable","showNotification","row","id","foundIndex","findIndex","DeleteDialogComponent","splice","paginator","_changePageSize","pageSize","numSelected","selected","length","numRows","dataSource","renderedData","isAllSelected","clear","forEach","select","totalSelect","item","index","d","RoomService","ExampleDataSource","sort","fromEvent","filter","nativeElement","colorName","text","placementFrom","placementAlign","duration","verticalPosition","horizontalPosition","panelClass","event","preventDefault","clientX","clientY","contextMenu","menuData","menu","focusFirstItem","openMenu","MatPaginator","MatSort","MatMenuTrigger","removeSelectedRows","addNew","refresh","_exampleDatabase","_paginator","_sort","_filterChange","BehaviorSubject","filteredData","pageIndex","next","displayDataChanges","sortChange","page","getAllRooms","merge","pipe","map","slice","searchStr","roomNo","type","acNonac","meal","capacity","phone","toLowerCase","indexOf","sortedData","sortData","startIndex","active","a","b","propertyA","propertyB","valueA","isNaN","valueB","DataSource","close","deleteRoom","MAT_DIALOG_DATA","confirmDelete","onNoClick","formControl","FormControl","dialogTitle","Room","createContactForm","hasError","rent","addRoom","getRawValue","confirmAdd","getRandomID","S4","Math","random","toString","substring","API_URL","isTblLoading","dialogData","get","error","name","message","EditRoomComponent","formdata","routes","path","component","RoomRoutingModule","RouterModule","RoomModule","CommonModule","FormsModule","ReactiveFormsModule","MatTableModule","MatPaginatorModule","MatFormFieldModule","MatInputModule","MatSnackBarModule","MatButtonModule","MatIconModule","MatDialogModule","MatSortModule","MatToolbarModule","MatSelectModule","MatDatepickerModule","MatCheckboxModule","MaterialFileInputModule","MatMenuModule","MatProgressSpinnerModule"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmCoB;;AACE;;AACF;;;;;;AAyBA;;AACE;;AACF;;;;;;AAeA;;AACE;;AACF;;;;;;AAOA;;AACE;;AACF;;;;;;AA+BA;;AACE;;AACF;;;;;;AAiBA;;AACE;;AACF;;;;;;AASA;;AACE;;AACF;;;;UClJPA,iB;AAEX,mCAAoBC,EAApB,EAAqC;AAAA;;AAAjB,eAAAA,EAAA,GAAAA,EAAA;AAClB,eAAKC,QAAL,GAAgB,KAAKD,EAAL,CAAQE,KAAR,CAAc;AAC5BC,iBAAK,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAC,UAAA,SAAD,EAAsB,4CAAAA,UAAA,SAAmB,WAAnB,CAAtB,CAAL,CADqB;AAE5BC,gBAAI,EAAE,CAAC,EAAD,CAFsB;AAG5BC,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAF,UAAA,SAAD,CAAL,CAHoB;AAI5BG,kBAAM,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAH,UAAA,SAAD,CAAL,CAJoB;AAK5BI,oBAAQ,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAJ,UAAA,SAAD,CAAL,CALkB;AAM5BK,2BAAe,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAL,UAAA,SAAD,CAAL,CANW;AAO5BM,uBAAW,EAAE,CAAC,EAAD,CAPe;AAQ5BC,sBAAU,EAAE,CAAC,EAAD,CARgB;AAS5BC,mBAAO,EAAE,CAAC,EAAD,CATmB;AAU5BC,iBAAK,EAAE,CACL,EADK,EAEL,CAAC,4CAAAT,UAAA,SAAD,EAAsB,4CAAAA,UAAA,MAAtB,EAAwC,4CAAAA,UAAA,WAAqB,CAArB,CAAxC,CAFK,CAVqB;AAc5BU,eAAG,EAAE,CAAC,EAAD,EAAK,CAAC,4CAAAV,UAAA,SAAD,CAAL,CAduB;AAe5BW,qBAAS,EAAE,CAAC,EAAD,CAfiB;AAgB5BC,qBAAS,EAAE,CAAC,EAAD;AAhBiB,WAAd,CAAhB;AAkBD;;;;iBACD,oBAAW;AACTC,mBAAO,CAACC,GAAR,CAAY,YAAZ,EAA0B,KAAKjB,QAAL,CAAckB,KAAxC;AACD;;;;;;;yBAxBUpB,iB,EAAgB,wH;AAAA,O;;;cAAhBA,iB;AAAgB,qC;AAAA,kB;AAAA,gB;AAAA,ivD;AAAA;AAAA;ADP7B;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AACE;;AAAuB;;AAAQ;;AACjC;;AACA;;AACE;;AACE;;AAA4B;;AAAI;;AACpC;;AACA;;AACE;;AAAoC;;AAAK;;AAC3C;;AACA;;AAAmC;;AAAG;;AACxC;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AACE;;AAAI;;AAAQ;;AAEd;;AACA;;AACE;;AAAyC;AAAA,qBAAY,IAAAqB,QAAA,EAAZ;AAAsB,aAAtB;;AACvC;;AACE;;AACE;;AACE;;AAAW;;AAAU;;AACrB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AAC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;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAM;;AACjB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAQ;;AACnB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAW;;AACtB;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAiB;;AAC5B;;AACE;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACA;;AACE;;AACF;;AACF;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAO;;AAClB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAK;;AAChB;;AACA;;AAGF;;AACF;;AACA;;AACE;;AACE;;AAAW;;AAAa;;AACxB;;AACA;;AACA;;AACA;;AAGF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAS;;AACpB;;AACF;;AACF;;AACF;;AACA;;AACE;;AACE;;AACE;;AAAW;;AAAY;;AACvB;;AAEA;;AAAoB;;AAAI;;AAC1B;;AACF;;AACF;;AACA;;AACE;;AACE;;AAAsF;;AAAM;;AAC5F;;AAAiC;;AAAM;;AACzC;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;AACF;;;;;;AA9J8B;;AAAA;;AAME;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAiBA;;AAAA;;AASA;;AAAA;;AAiBE;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAGA;;AAAA;;AAIF;;AAAA;;AAmBA;;AAAA;;AAQI;;AAAA;;AACiB;;AAAA;;AAErB;;AAAA;;AA0BQ;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AE1KxC,UAAMyJ,MAAM,GAAW,CACrB;AACEC,YAAI,EAAE,WADR;AAEEC,iBAAS,EAAE,4DAAAvJ;AAFb,OADqB,EAKrB;AACEsJ,YAAI,EAAE,UADR;AAEEC,iBAAS,EAAE,0DAAAhL;AAFb,OALqB,EASrB;AACE+K,YAAI,EAAE,WADR;AAEEC,iBAAS,EAAE,4DAAAJ;AAFb,OATqB,CAAvB;;UAmBaK,kB;;;;;yBAAAA,kB;AAAiB,O;;;cAAjBA;;;kBAHF,CAAC,6CAAAC,YAAA,UAAsBJ,MAAtB,CAAD,C,EACC,6CAAAI,Y;;;;4HAECD,kB,EAAiB;AAAA;AAAA,oBAFlB,6CAAAC,YAEkB;AAAA,S;AAFN,O;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;UCmCXC,W;;;;;yBAAAA,W;AAAU,O;;;cAAVA;;;mBAFA,CAAC,sDAAArG,WAAD,C;AAAa,kBAtBf,CACP,6CAAAsG,YADO,EAEP,4CAAAC,WAFO,EAGP,4CAAAC,mBAHO,EAIP,sDAAAC,cAJO,EAKP,0DAAAC,kBALO,EAMP,2DAAAC,kBANO,EAOP,sDAAAC,cAPO,EAQP,0DAAAC,iBARO,EASP,uDAAAC,eATO,EAUP,qDAAAC,aAVO,EAWP,uDAAAC,eAXO,EAYP,qDAAAC,aAZO,EAaP,wDAAAC,gBAbO,EAcP,uDAAAC,eAdO,EAeP,2DAAAC,mBAfO,EAgBP,yDAAAC,iBAhBO,EAiBP,sDAAAC,uBAjBO,EAkBP,qDAAAC,aAlBO,EAmBP,iEAAAC,wBAnBO,EAoBP,mDAAArB,iBApBO,CAsBe;;;;4HAEbE,W,EAAU;AAAA,yBA9BnB,4DAAA1J,gBA8BmB,EA7BnB,wEAAAkC,qBA6BmB,EA5BnB,kFAAAlB,mBA4BmB,EA3BnB,0DAAAzC,gBA2BmB,EA1BnB,4DAAA4K,iBA0BmB;AA1BF,oBAGjB,6CAAAQ,YAHiB,EAIjB,4CAAAC,WAJiB,EAKjB,4CAAAC,mBALiB,EAMjB,sDAAAC,cANiB,EAOjB,0DAAAC,kBAPiB,EAQjB,2DAAAC,kBARiB,EASjB,sDAAAC,cATiB,EAUjB,0DAAAC,iBAViB,EAWjB,uDAAAC,eAXiB,EAYjB,qDAAAC,aAZiB,EAajB,uDAAAC,eAbiB,EAcjB,qDAAAC,aAdiB,EAejB,wDAAAC,gBAfiB,EAgBjB,uDAAAC,eAhBiB,EAiBjB,2DAAAC,mBAjBiB,EAkBjB,yDAAAC,iBAlBiB,EAmBjB,sDAAAC,uBAnBiB,EAoBjB,qDAAAC,aApBiB,EAqBjB,iEAAAC,wBArBiB,EAsBjB,mDAAArB,iBAtBiB;AA0BE,S;AAJF,O","file":"src_app_rooms_rooms_module_ts-es5.js","sourcesContent":["<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Add Room</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Rooms</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Add</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Add Room</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input matInput formControlName=\"designation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'mechanical'\">\r\n                        Mechanical\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'science'\">\r\n                        Science\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'mathematics'\">\r\n                        Mathematics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'computer'\">\r\n                        Computer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'civil'\">\r\n                        Civil\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('email').hasError('email') && roomForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Upload Image</mat-label>\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!roomForm.valid \" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-add-room',\r\n  templateUrl: './add-room.component.html',\r\n  styleUrls: ['./add-room.component.sass']\r\n})\r\nexport class AddRoomComponent {\r\n  roomForm: FormGroup;\r\n  constructor(private fb: FormBuilder) {\r\n    this.roomForm = this.fb.group({\r\n      first: ['', [Validators.required, Validators.pattern('[a-zA-Z]+')]],\r\n      last: [''],\r\n      gender: ['', [Validators.required]],\r\n      mobile: ['', [Validators.required]],\r\n      password: ['', [Validators.required]],\r\n      conformPassword: ['', [Validators.required]],\r\n      designation: [''],\r\n      department: [''],\r\n      address: [''],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)]\r\n      ],\r\n      dob: ['', [Validators.required]],\r\n      education: [''],\r\n      uploadImg: ['']\r\n    });\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.roomForm.value);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">All Rooms</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Rooms</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">All</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row\">\r\n      <div class=\"col-md-12\">\r\n        <div class=\"tabbable-line\">\r\n          <div class=\"row\">\r\n            <div class=\"col-lg-12 col-md-12 col-sm-12 col-xs-12\">\r\n              <div class=\"card\">\r\n                <div class=\"body\">\r\n                  <div class=\"table-responsive\">\r\n                    <div class=\"materialTableHeader\">\r\n                      <div class=\"row\">\r\n                        <div class=\"col-8\">\r\n                          <ul class=\"header-buttons-left ml-0\">\r\n                            <li class=\"dropdown\">\r\n                              <h2>\r\n                                <strong>Rooms</strong></h2>\r\n                            </li>\r\n                            <li class=\"dropdown m-l-20\">\r\n                              <label for=\"search-input\"><i class=\"material-icons search-icon\">search</i></label>\r\n                              <input placeholder=\"Search\" type=\"text\" #filter class=\"browser-default search-field\"\r\n                                aria-label=\"Search box\">\r\n                            </li>\r\n                            <li>\r\n                              <div class=\"icon-button-demo m-l-10\" [hidden]=!selection.hasValue()>\r\n                                <button mat-mini-fab color=\"warn\" (click)=\"removeSelectedRows()\">\r\n                                  <mat-icon class=\"col-white\">delete\r\n                                  </mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                        <div class=\"col-4\">\r\n                          <ul class=\"header-buttons\">\r\n                            <li>\r\n                              <div class=\"icon-button-demo\">\r\n                                <button mat-mini-fab color=\"primary\" (click)=\"addNew()\">\r\n                                  <mat-icon class=\"col-white\">add</mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li>\r\n                            <li>\r\n                              <div class=\"icon-button-demo\">\r\n                                <button mat-mini-fab color=\"primary\" (click)=\"refresh()\">\r\n                                  <mat-icon class=\"col-white\">refresh\r\n                                  </mat-icon>\r\n                                </button>\r\n                              </div>\r\n                            </li>\r\n                          </ul>\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                    <mat-table #table [dataSource]=\"dataSource\" matSort class=\"mat-cell\">\r\n                      <!-- Checkbox Column -->\r\n                      <ng-container matColumnDef=\"select\">\r\n                        <mat-header-cell *matHeaderCellDef [ngClass]=\"'tbl-col-width-per-6'\">\r\n                          <mat-checkbox (change)=\"$event ? masterToggle() : null\"\r\n                            [checked]=\"selection.hasValue() && isAllSelected()\"\r\n                            [indeterminate]=\"selection.hasValue() && !isAllSelected()\" [ngClass]=\"'tbl-checkbox'\">\r\n                          </mat-checkbox>\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" [ngClass]=\"'tbl-col-width-per-6'\">\r\n                          <mat-checkbox (click)=\"$event.stopPropagation()\"\r\n                            (change)=\"$event ? selection.toggle(row) : null\" [checked]=\"selection.isSelected(row)\"\r\n                            [ngClass]=\"'tbl-checkbox'\">\r\n                          </mat-checkbox>\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <!-- ID Column -->\r\n                      <ng-container matColumnDef=\"id\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Id\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\">{{row.id}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"roomNo\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Room No\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.roomNo}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"type\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Type\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                          {{row.type}}</mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"acNonac\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>AC/Non AC\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.acNonac}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"meal\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Meal\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.meal}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"capacity\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Bad Capacity\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.capacity}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"phone\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Phone\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\"> {{row.phone}}\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <ng-container matColumnDef=\"rent\">\r\n                        <mat-header-cell *matHeaderCellDef mat-sort-header>Rent\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row\" (contextmenu)=\"onContextMenu($event, row)\">\r\n                          {{row.rent}}</mat-cell>\r\n                      </ng-container>\r\n                      <!-- actions -->\r\n                      <ng-container matColumnDef=\"actions\">\r\n                        <mat-header-cell class=\"pr-0\" *matHeaderCellDef>Actions\r\n                        </mat-header-cell>\r\n                        <mat-cell *matCellDef=\"let row; let i=index;\" class=\"pr-0\">\r\n                          <button mat-icon-button color=\"accent\" class=\"btn-tbl-edit\" (click)=\"$event.stopPropagation()\"\r\n                            (click)=\"editCall(row)\">\r\n                            <mat-icon aria-label=\"Edit\" class=\"col-white\">edit\r\n                            </mat-icon>\r\n                          </button>\r\n                          <button mat-icon-button color=\"accent\" class=\"btn-tbl-delete\"\r\n                            (click)=\"$event.stopPropagation()\" (click)=\"deleteItem(row)\">\r\n                            <mat-icon aria-label=\"Delete\" class=\"col-white\">delete\r\n                            </mat-icon>\r\n                          </button>\r\n                        </mat-cell>\r\n                      </ng-container>\r\n                      <mat-header-row *matHeaderRowDef=\"displayedColumns\">\r\n                      </mat-header-row>\r\n                      <!-- <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row> -->\r\n                      <mat-row *matRowDef=\"let row; columns: displayedColumns;\" (click)=\"editCall(row)\"\r\n                        [style.cursor]=\"'pointer'\" matRipple>\r\n                      </mat-row>\r\n                    </mat-table>\r\n                    <!-- Loading spinner -->\r\n                    <div *ngIf=\"exampleDatabase.isTblLoading\" class=\"tbl-spinner\">\r\n                      <mat-progress-spinner color=\"primary\" [diameter]=\"40\" mode=\"indeterminate\">\r\n                      </mat-progress-spinner>\r\n                    </div>\r\n                    <!-- context menu start -->\r\n                    <div style=\"visibility: hidden; position: fixed\" [style.left]=\"contextMenuPosition.x\"\r\n                      [style.top]=\"contextMenuPosition.y\" [matMenuTriggerFor]=\"contextMenu\">\r\n                    </div>\r\n                    <mat-menu #contextMenu=\"matMenu\">\r\n                      <ng-template matMenuContent let-item=\"item\">\r\n                        <button mat-menu-item (click)=\"addNew()\">\r\n                          <mat-icon>add_box</mat-icon>\r\n                          <span>Add Record</span>\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"editCall(item)\">\r\n                          <mat-icon>create</mat-icon>\r\n                          <span>Edit Record</span>\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"deleteItem(item)\">\r\n                          <mat-icon>delete</mat-icon>\r\n                          <span>Delete Record</span>\r\n                        </button>\r\n                        <button mat-menu-item (click)=\"refresh()\">\r\n                          <mat-icon>refresh</mat-icon>\r\n                          <span>Refresh Record</span>\r\n                        </button>\r\n                        <button mat-menu-item disabled>\r\n                          <mat-icon>no_encryption</mat-icon>\r\n                          <span>Disable</span>\r\n                        </button>\r\n                        <button mat-menu-item [matMenuTriggerFor]=\"nestedmenu\">\r\n                          <mat-icon>list_alt</mat-icon>\r\n                          <span> Nested Menu</span>\r\n                        </button>\r\n                      </ng-template>\r\n                    </mat-menu>\r\n                    <mat-menu #nestedmenu=\"matMenu\">\r\n                      <button mat-menu-item>\r\n                        <mat-icon>mail_outline</mat-icon>\r\n                        <span>Item 1</span>\r\n                      </button>\r\n                      <button mat-menu-item>\r\n                        <mat-icon>call</mat-icon>\r\n                        <span>Item 2</span>\r\n                      </button>\r\n                      <button mat-menu-item>\r\n                        <mat-icon>chat</mat-icon>\r\n                        <span>Item 3</span>\r\n                      </button>\r\n                    </mat-menu>\r\n                    <!-- context menu end -->\r\n                    <div class=\"no-results\" [style.display]=\"dataSource.renderedData.length == 0 ? '' : 'none'\">\r\n                      No results\r\n                    </div>\r\n                    <mat-paginator #paginator [length]=\"dataSource.filteredData.length\" [pageIndex]=\"0\" [pageSize]=\"10\"\r\n                      [pageSizeOptions]=\"[5, 10, 25, 100]\">\r\n                    </mat-paginator>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\r\nimport { RoomService } from './rooms.service';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { MatPaginator } from '@angular/material/paginator';\r\nimport { MatSort } from '@angular/material/sort';\r\nimport { Room } from './rooms.model';\r\nimport { DataSource } from '@angular/cdk/collections';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { BehaviorSubject, fromEvent, merge, Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { FormDialogComponent } from './dialogs/form-dialog/form-dialog.component';\r\nimport { DeleteDialogComponent } from './dialogs/delete/delete.component';\r\nimport { MatMenuTrigger } from '@angular/material/menu';\r\nimport { SelectionModel } from '@angular/cdk/collections';\r\n\r\n@Component({\r\n  selector: 'app-all-rooms',\r\n  templateUrl: './all-rooms.component.html',\r\n  styleUrls: ['./all-rooms.component.sass'],\r\n})\r\nexport class AllroomComponent implements OnInit {\r\n  displayedColumns = [\r\n    'select',\r\n    'roomNo',\r\n    'type',\r\n    'acNonac',\r\n    'meal',\r\n    'capacity',\r\n    'phone',\r\n    'rent',\r\n    'actions',\r\n  ];\r\n  exampleDatabase: RoomService | null;\r\n  dataSource: ExampleDataSource | null;\r\n  selection = new SelectionModel<Room>(true, []);\r\n  id: number;\r\n  room: Room | null;\r\n  constructor(\r\n    public httpClient: HttpClient,\r\n    public dialog: MatDialog,\r\n    public roomService: RoomService,\r\n    private snackBar: MatSnackBar\r\n  ) {}\r\n  @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\r\n  @ViewChild(MatSort, { static: true }) sort: MatSort;\r\n  @ViewChild('filter', { static: true }) filter: ElementRef;\r\n  @ViewChild(MatMenuTrigger)\r\n  contextMenu: MatMenuTrigger;\r\n  contextMenuPosition = { x: '0px', y: '0px' };\r\n\r\n  ngOnInit() {\r\n    this.loadData();\r\n  }\r\n  refresh() {\r\n    this.loadData();\r\n  }\r\n  addNew() {\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        room: this.room,\r\n        action: 'add',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // After dialog is closed we're doing frontend updates\r\n        // For add we're just pushing a new row inside DataServicex\r\n        this.exampleDatabase.dataChange.value.unshift(\r\n          this.roomService.getDialogData()\r\n        );\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-success',\r\n          'Add Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  editCall(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(FormDialogComponent, {\r\n      data: {\r\n        room: row,\r\n        action: 'edit',\r\n      },\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        // When using an edit things are little different, firstly we find record inside DataService by id\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // Then you update that record using data from dialogData (values you enetered)\r\n        this.exampleDatabase.dataChange.value[foundIndex] =\r\n          this.roomService.getDialogData();\r\n        // And lastly refresh table\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'black',\r\n          'Edit Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  deleteItem(row) {\r\n    this.id = row.id;\r\n    let tempDirection;\r\n    if (localStorage.getItem('isRtl') === 'true') {\r\n      tempDirection = 'rtl';\r\n    } else {\r\n      tempDirection = 'ltr';\r\n    }\r\n    const dialogRef = this.dialog.open(DeleteDialogComponent, {\r\n      data: row,\r\n      direction: tempDirection,\r\n    });\r\n    dialogRef.afterClosed().subscribe((result) => {\r\n      if (result === 1) {\r\n        const foundIndex = this.exampleDatabase.dataChange.value.findIndex(\r\n          (x) => x.id === this.id\r\n        );\r\n        // for delete we use splice in order to remove single object from DataService\r\n        this.exampleDatabase.dataChange.value.splice(foundIndex, 1);\r\n        this.refreshTable();\r\n        this.showNotification(\r\n          'snackbar-danger',\r\n          'Delete Record Successfully...!!!',\r\n          'bottom',\r\n          'center'\r\n        );\r\n      }\r\n    });\r\n  }\r\n  private refreshTable() {\r\n    this.paginator._changePageSize(this.paginator.pageSize);\r\n  }\r\n  /** Whether the number of selected elements matches the total number of rows. */\r\n  isAllSelected() {\r\n    const numSelected = this.selection.selected.length;\r\n    const numRows = this.dataSource.renderedData.length;\r\n    return numSelected === numRows;\r\n  }\r\n\r\n  /** Selects all rows if they are not all selected; otherwise clear selection. */\r\n  masterToggle() {\r\n    this.isAllSelected()\r\n      ? this.selection.clear()\r\n      : this.dataSource.renderedData.forEach((row) =>\r\n          this.selection.select(row)\r\n        );\r\n  }\r\n  removeSelectedRows() {\r\n    const totalSelect = this.selection.selected.length;\r\n    this.selection.selected.forEach((item) => {\r\n      const index: number = this.dataSource.renderedData.findIndex(\r\n        (d) => d === item\r\n      );\r\n      // console.log(this.dataSource.renderedData.findIndex((d) => d === item));\r\n      this.exampleDatabase.dataChange.value.splice(index, 1);\r\n      this.refreshTable();\r\n      this.selection = new SelectionModel<Room>(true, []);\r\n    });\r\n    this.showNotification(\r\n      'snackbar-danger',\r\n      totalSelect + ' Record Delete Successfully...!!!',\r\n      'bottom',\r\n      'center'\r\n    );\r\n  }\r\n  public loadData() {\r\n    this.exampleDatabase = new RoomService(this.httpClient);\r\n    this.dataSource = new ExampleDataSource(\r\n      this.exampleDatabase,\r\n      this.paginator,\r\n      this.sort\r\n    );\r\n    fromEvent(this.filter.nativeElement, 'keyup')\r\n      // .debounceTime(150)\r\n      // .distinctUntilChanged()\r\n      .subscribe(() => {\r\n        if (!this.dataSource) {\r\n          return;\r\n        }\r\n        this.dataSource.filter = this.filter.nativeElement.value;\r\n      });\r\n  }\r\n  showNotification(colorName, text, placementFrom, placementAlign) {\r\n    this.snackBar.open(text, '', {\r\n      duration: 2000,\r\n      verticalPosition: placementFrom,\r\n      horizontalPosition: placementAlign,\r\n      panelClass: colorName,\r\n    });\r\n  }\r\n  // context menu\r\n  onContextMenu(event: MouseEvent, item: Room) {\r\n    event.preventDefault();\r\n    this.contextMenuPosition.x = event.clientX + 'px';\r\n    this.contextMenuPosition.y = event.clientY + 'px';\r\n    this.contextMenu.menuData = { item: item };\r\n    this.contextMenu.menu.focusFirstItem('mouse');\r\n    this.contextMenu.openMenu();\r\n  }\r\n}\r\nexport class ExampleDataSource extends DataSource<Room> {\r\n  _filterChange = new BehaviorSubject('');\r\n  get filter(): string {\r\n    return this._filterChange.value;\r\n  }\r\n  set filter(filter: string) {\r\n    this._filterChange.next(filter);\r\n  }\r\n  filteredData: Room[] = [];\r\n  renderedData: Room[] = [];\r\n  constructor(\r\n    public _exampleDatabase: RoomService,\r\n    public _paginator: MatPaginator,\r\n    public _sort: MatSort\r\n  ) {\r\n    super();\r\n    // Reset to the first page when the user changes the filter.\r\n    this._filterChange.subscribe(() => (this._paginator.pageIndex = 0));\r\n  }\r\n  /** Connect function called by the table to retrieve one stream containing the data to render. */\r\n  connect(): Observable<Room[]> {\r\n    // Listen for any changes in the base data, sorting, filtering, or pagination\r\n    const displayDataChanges = [\r\n      this._exampleDatabase.dataChange,\r\n      this._sort.sortChange,\r\n      this._filterChange,\r\n      this._paginator.page,\r\n    ];\r\n    this._exampleDatabase.getAllRooms();\r\n    return merge(...displayDataChanges).pipe(\r\n      map(() => {\r\n        // Filter data\r\n        this.filteredData = this._exampleDatabase.data\r\n          .slice()\r\n          .filter((room: Room) => {\r\n            const searchStr = (\r\n              room.roomNo +\r\n              room.type +\r\n              room.acNonac +\r\n              room.meal +\r\n              room.capacity +\r\n              room.phone\r\n            ).toLowerCase();\r\n            return searchStr.indexOf(this.filter.toLowerCase()) !== -1;\r\n          });\r\n        // Sort filtered data\r\n        const sortedData = this.sortData(this.filteredData.slice());\r\n        // Grab the page's slice of the filtered sorted data.\r\n        const startIndex = this._paginator.pageIndex * this._paginator.pageSize;\r\n        this.renderedData = sortedData.splice(\r\n          startIndex,\r\n          this._paginator.pageSize\r\n        );\r\n        return this.renderedData;\r\n      })\r\n    );\r\n  }\r\n  disconnect() {}\r\n  /** Returns a sorted copy of the database data. */\r\n  sortData(data: Room[]): Room[] {\r\n    if (!this._sort.active || this._sort.direction === '') {\r\n      return data;\r\n    }\r\n    return data.sort((a, b) => {\r\n      let propertyA: number | string = '';\r\n      let propertyB: number | string = '';\r\n      switch (this._sort.active) {\r\n        case 'id':\r\n          [propertyA, propertyB] = [a.id, b.id];\r\n          break;\r\n        case 'roomNo':\r\n          [propertyA, propertyB] = [a.roomNo, b.roomNo];\r\n          break;\r\n        case 'type':\r\n          [propertyA, propertyB] = [a.type, b.type];\r\n          break;\r\n        case 'acNonac':\r\n          [propertyA, propertyB] = [a.acNonac, b.acNonac];\r\n          break;\r\n        case 'meal':\r\n          [propertyA, propertyB] = [a.meal, b.meal];\r\n          break;\r\n        case 'capacity':\r\n          [propertyA, propertyB] = [a.capacity, b.capacity];\r\n          break;\r\n        case 'phone':\r\n          [propertyA, propertyB] = [a.phone, b.phone];\r\n          break;\r\n      }\r\n      const valueA = isNaN(+propertyA) ? propertyA : +propertyA;\r\n      const valueB = isNaN(+propertyB) ? propertyB : +propertyB;\r\n      return (\r\n        (valueA < valueB ? -1 : 1) * (this._sort.direction === 'asc' ? 1 : -1)\r\n      );\r\n    });\r\n  }\r\n}\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { RoomService } from '../../rooms.service';\r\n@Component({\r\n  selector: 'app-delete',\r\n  templateUrl: './delete.component.html',\r\n  styleUrls: ['./delete.component.sass']\r\n})\r\nexport class DeleteDialogComponent {\r\n  constructor(\r\n    public dialogRef: MatDialogRef<DeleteDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public roomService: RoomService\r\n  ) { }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  confirmDelete(): void {\r\n    this.roomService.deleteRoom(this.data.id);\r\n  }\r\n}\r\n","<div class=\"container\">\r\n  <h3 mat-dialog-title>Are you sure?</h3>\r\n  <div mat-dialog-content>\r\n    <ul class=\"clearfix\">\r\n      <li>\r\n        <p><span class=\"fw-bold\"> Room No: </span>{{data.roomNo}}</p>\r\n      </li>\r\n      <li>\r\n        <p><span class=\"fw-bold\"> Room Type: </span>{{ data.type }}</p>\r\n      </li>\r\n      <li>\r\n        <p>\r\n          <span class=\"fw-bold\">Capacity: </span>{{data.capacity}}\r\n        </p>\r\n      </li>\r\n    </ul>\r\n  </div>\r\n  <div mat-dialog-actions class=\"mb-1\">\r\n    <button mat-flat-button color=\"warn\" [mat-dialog-close]=\"1\" (click)=\"confirmDelete()\">\r\n      Delete\r\n    </button>\r\n    <button mat-flat-button (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n  </div>\r\n</div>\r\n","<div class=\"addContainer\">\r\n  <div class=\"modalHeader\">\r\n    <div class=\"editRowModal\">\r\n      <div class=\"modalHeader clearfix\">\r\n        <div class=\"modal-about\">\r\n          <div class=\"fw-bold p-t-5 font-17\">\r\n            {{dialogTitle}}</div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <button mat-icon-button (click)=\"dialogRef.close()\" aria-label=\"Close dialog\">\r\n      <mat-icon>close</mat-icon>\r\n    </button>\r\n  </div>\r\n  <div mat-dialog-content>\r\n    <form class=\"register-form m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"submit\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Room No</mat-label>\r\n            <input matInput formControlName=\"roomNo\" required>\r\n            <mat-error *ngIf=\"roomForm.get('roomNo').hasError('required')\">\r\n              Room no is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Select Room Type</mat-label>\r\n            <mat-select formControlName=\"type\" required>\r\n              <mat-option [value]=\"'Delux'\">\r\n                Delux\r\n              </mat-option>\r\n              <mat-option [value]=\"'Super Delux'\">\r\n                Super Delux\r\n              </mat-option>\r\n              <mat-option [value]=\"'Single'\">\r\n                Single\r\n              </mat-option>\r\n              <mat-option [value]=\"'Double'\">\r\n                Double\r\n              </mat-option>\r\n              <mat-option [value]=\"'Vila'\">\r\n                Vila\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"roomForm.get('type').hasError('required')\">\r\n              Select Room Type\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>AC/Non AC</mat-label>\r\n            <mat-select formControlName=\"acNonac\" required>\r\n              <mat-option [value]=\"'AC'\">\r\n                AC\r\n              </mat-option>\r\n              <mat-option [value]=\"'Non AC'\">\r\n                Non AC\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"roomForm.get('acNonac').hasError('required')\">\r\n              Select AC or Non AC\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Meal</mat-label>\r\n            <mat-select formControlName=\"meal\" required>\r\n              <mat-option [value]=\"'Free Breakfast'\">\r\n                Free Breakfast\r\n              </mat-option>\r\n              <mat-option [value]=\"'Free Lunch'\">\r\n                Free Lunch\r\n              </mat-option>\r\n              <mat-option [value]=\"'Free Welcome Drink'\">\r\n                Free Welcome Drink\r\n              </mat-option>\r\n              <mat-option [value]=\"'Free Dinner'\">\r\n                Free Dinner\r\n              </mat-option>\r\n              <mat-option [value]=\"'No Free Food'\">\r\n                No Free Food\r\n              </mat-option>\r\n              <mat-option [value]=\"'None'\">\r\n                None\r\n              </mat-option>\r\n            </mat-select>\r\n            <mat-error *ngIf=\"roomForm.get('meal').hasError('required')\">\r\n              Select Meal\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Capacity</mat-label>\r\n            <input matInput formControlName=\"capacity\" type=\"number\">\r\n            <mat-error *ngIf=\"roomForm.get('capacity').hasError('required')\">\r\n              Capacity is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Phone</mat-label>\r\n            <input matInput formControlName=\"phone\" type=\"number\">\r\n            <mat-error *ngIf=\"roomForm.get('phone').hasError('required')\">\r\n              Phone is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n          <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n            <mat-label>Rent</mat-label>\r\n            <input matInput formControlName=\"rent\" type=\"number\">\r\n            <mat-error *ngIf=\"roomForm.get('rent').hasError('required')\">\r\n              Rent is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n          <div class=\"example-button-row\">\r\n            <button mat-raised-button color=\"primary\" [type]=\"submit\" [disabled]=\"!roomForm.valid\"\r\n              [mat-dialog-close]=\"1\" (click)=\"confirmAdd()\">Save</button>\r\n            <button mat-raised-button color=\"warn\" (click)=\"onNoClick()\" tabindex=\"-1\">Cancel</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </form>\r\n  </div>\r\n</div>\r\n","import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { Component, Inject } from '@angular/core';\r\nimport { RoomService } from '../../rooms.service';\r\nimport {\r\n  FormControl,\r\n  Validators,\r\n  FormGroup,\r\n  FormBuilder\r\n} from '@angular/forms';\r\nimport { Room } from '../../rooms.model';\r\nimport { formatDate } from '@angular/common';\r\n@Component({\r\n  selector: 'app-form-dialog',\r\n  templateUrl: './form-dialog.component.html',\r\n  styleUrls: ['./form-dialog.component.sass']\r\n})\r\nexport class FormDialogComponent {\r\n  action: string;\r\n  dialogTitle: string;\r\n  roomForm: FormGroup;\r\n  room: Room;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<FormDialogComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data: any,\r\n    public roomService: RoomService,\r\n    private fb: FormBuilder\r\n  ) {\r\n    // Set the defaults\r\n    this.action = data.action;\r\n    if (this.action === 'edit') {\r\n      this.dialogTitle = 'Edit Room';\r\n      this.room = data.room;\r\n    } else {\r\n      this.dialogTitle = 'New Room';\r\n      this.room = new Room({});\r\n    }\r\n    this.roomForm = this.createContactForm();\r\n  }\r\n  formControl = new FormControl('', [\r\n    Validators.required\r\n    // Validators.email,\r\n  ]);\r\n  getErrorMessage() {\r\n    return this.formControl.hasError('required')\r\n      ? 'Required field'\r\n      : this.formControl.hasError('email')\r\n        ? 'Not a valid email'\r\n        : '';\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      id: [this.room.id],\r\n      roomNo: [this.room.roomNo],\r\n      type: [this.room.type],\r\n      acNonac: [this.room.acNonac],\r\n      meal: [this.room.meal],\r\n      capacity: [this.room.capacity],\r\n      phone: [this.room.phone],\r\n      rent: [this.room.rent]\r\n    });\r\n  }\r\n  submit() {\r\n    // emppty stuff\r\n  }\r\n  onNoClick(): void {\r\n    this.dialogRef.close();\r\n  }\r\n  public confirmAdd(): void {\r\n    this.roomService.addRoom(this.roomForm.getRawValue());\r\n  }\r\n}\r\n","export class Room {\r\n  id: number;\r\n  roomNo: string;\r\n  type: string;\r\n  acNonac: string;\r\n  meal: string;\r\n  capacity: string;\r\n  phone: string;\r\n  rent: string;\r\n  constructor(room) {\r\n    {\r\n      this.id = room.id || this.getRandomID();\r\n      this.roomNo = room.roomNo || '';\r\n      this.type = room.type || '';\r\n      this.acNonac = room.acNonac || '';\r\n      this.meal = room.meal || '';\r\n      this.capacity = room.capacity || '';\r\n      this.phone = room.phone || '';\r\n      this.rent = room.rent || '';\r\n    }\r\n  }\r\n  public getRandomID(): string {\r\n    const S4 = () => {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    return S4() + S4();\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { BehaviorSubject } from 'rxjs';\r\nimport { Room } from './rooms.model';\r\nimport { HttpClient, HttpErrorResponse } from '@angular/common/http';\r\n@Injectable()\r\nexport class RoomService {\r\n  private readonly API_URL = 'assets/data/rooms.json';\r\n  isTblLoading = true;\r\n  dataChange: BehaviorSubject<Room[]> = new BehaviorSubject<Room[]>([]);\r\n  // Temporarily stores data from dialogs\r\n  dialogData: any;\r\n  constructor(private httpClient: HttpClient) {}\r\n  get data(): Room[] {\r\n    return this.dataChange.value;\r\n  }\r\n  getDialogData() {\r\n    return this.dialogData;\r\n  }\r\n  /** CRUD METHODS */\r\n  getAllRooms(): void {\r\n    this.httpClient.get<Room[]>(this.API_URL).subscribe(\r\n      (data) => {\r\n        this.isTblLoading = false;\r\n        this.dataChange.next(data);\r\n      },\r\n      (error: HttpErrorResponse) => {\r\n        this.isTblLoading = false;\r\n        console.log(error.name + ' ' + error.message);\r\n      }\r\n    );\r\n  }\r\n  // DEMO ONLY, you can find working methods below\r\n  addRoom(room: Room): void {\r\n    this.dialogData = room;\r\n  }\r\n  updateRoom(room: Room): void {\r\n    this.dialogData = room;\r\n  }\r\n  deleteRoom(id: number): void {\r\n    console.log(id);\r\n  }\r\n}\r\n","<section class=\"content\">\r\n  <div class=\"container-fluid\">\r\n    <div class=\"block-header\">\r\n      <div class=\"row\">\r\n        <div class=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\r\n          <ul class=\"breadcrumb breadcrumb-style \">\r\n            <li class=\"breadcrumb-item\">\r\n              <h4 class=\"page-title\">Edit Room</h4>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-1\">\r\n              <a routerLink=\"/dashboard/main\">\r\n                <i class=\"fas fa-home\"></i> Home</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item bcrumb-2\">\r\n              <a href=\"#\" onClick=\"return false;\">Rooms</a>\r\n            </li>\r\n            <li class=\"breadcrumb-item active\">Edit</li>\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </div>\r\n    <div class=\"row clearfix\">\r\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12\">\r\n        <div class=\"card\">\r\n          <div class=\"header\">\r\n            <h2>Edit Room</h2>\r\n\r\n          </div>\r\n          <div class=\"body\">\r\n            <form class=\"m-4\" [formGroup]=\"roomForm\" (ngSubmit)=\"onSubmit()\">\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>First name</mat-label>\r\n                    <input matInput formControlName=\"first\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('first').hasError('required')\">\r\n                      First name is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Last name</mat-label>\r\n                    <input matInput formControlName=\"last\">\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Gender</mat-label>\r\n                    <mat-select formControlName=\"gender\" required>\r\n                      <mat-option [value]=\"'male'\">\r\n                        Male\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'female'\">\r\n                        Female\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'other'\">\r\n                        Other\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('gender').hasError('required')\">\r\n                      Gender is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Mobile</mat-label>\r\n                    <input matInput formControlName=\"mobile\" type=\"number\" required>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Password</mat-label>\r\n                    <input matInput formControlName=\"password\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('password').hasError('required')\">\r\n                      password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Re-Enter Password</mat-label>\r\n                    <input matInput formControlName=\"conformPassword\" type=\"password\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('conformPassword').hasError('required')\">\r\n                      Re-Enter password is required\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Designation</mat-label>\r\n                    <input matInput formControlName=\"designation\">\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Select Department</mat-label>\r\n                    <mat-select formControlName=\"department\" required>\r\n                      <mat-option [value]=\"'mechanical'\">\r\n                        Mechanical\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'science'\">\r\n                        Science\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'mathematics'\">\r\n                        Mathematics\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'computer'\">\r\n                        Computer\r\n                      </mat-option>\r\n                      <mat-option [value]=\"'civil'\">\r\n                        Civil\r\n                      </mat-option>\r\n                    </mat-select>\r\n                    <mat-error *ngIf=\"roomForm.get('department').hasError('required')\">\r\n                      Select Any Department\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Address</mat-label>\r\n                    <textarea matInput formControlName=\"address\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Email</mat-label>\r\n                    <input matInput formControlName=\"email\" required>\r\n                    <mat-error *ngIf=\"roomForm.get('email').hasError('email') && roomForm.get('email').touched\">\r\n                      Please enter a valid email address\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n                <div class=\"col-xl-6 col-lg-6 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Date Of Birth</mat-label>\r\n                    <input matInput [matDatepicker]=\"picker\" formControlName=\"dob\" required>\r\n                    <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\r\n                    <mat-datepicker #picker></mat-datepicker>\r\n                    <mat-error *ngIf=\"roomForm.get('dob').hasError('required')\">\r\n                      Please select date\r\n                    </mat-error>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Education</mat-label>\r\n                    <textarea matInput formControlName=\"education\"></textarea>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <mat-form-field class=\"example-full-width mb-3\" appearance=\"outline\">\r\n                    <mat-label>Upload Image</mat-label>\r\n                    <ngx-mat-file-input formControlName=\"uploadImg\">\r\n                    </ngx-mat-file-input>\r\n                    <mat-icon matSuffix>face</mat-icon>\r\n                  </mat-form-field>\r\n                </div>\r\n              </div>\r\n              <div class=\"row\">\r\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n                  <button class=\"msr-3\" [disabled]=\"!roomForm.valid \" mat-raised-button color=\"primary\">Submit</button>\r\n                  <button type=\"button\" mat-button>Cancel</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  </div>\r\n</section>\r\n","import { Component } from '@angular/core';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-edit-room',\r\n  templateUrl: './edit-room.component.html',\r\n  styleUrls: ['./edit-room.component.sass'],\r\n})\r\nexport class EditRoomComponent {\r\n  roomForm: FormGroup;\r\n  formdata = {\r\n    first: 'Pooja',\r\n    last: 'Sarma',\r\n    gender: 'female',\r\n    mobile: '123456789',\r\n    password: '123',\r\n    conformPassword: '123',\r\n    email: 'test@example.com',\r\n    designation: 'Sr. Room',\r\n    department: 'science',\r\n    address: '101, Elanxa, New Yourk',\r\n    dob: '1987-02-17T14:22:18Z',\r\n    education: 'M.Sc.,P.H.D.',\r\n    uploadImg: '',\r\n  };\r\n  constructor(private fb: FormBuilder) {\r\n    this.roomForm = this.createContactForm();\r\n  }\r\n  onSubmit() {\r\n    console.log('Form Value', this.roomForm.value);\r\n  }\r\n  createContactForm(): FormGroup {\r\n    return this.fb.group({\r\n      first: [\r\n        this.formdata.first,\r\n        [Validators.required, Validators.pattern('[a-zA-Z]+')],\r\n      ],\r\n      last: [this.formdata.last],\r\n      gender: [this.formdata.gender, [Validators.required]],\r\n      mobile: [this.formdata.mobile, [Validators.required]],\r\n      password: [this.formdata.password],\r\n      conformPassword: [this.formdata.conformPassword],\r\n      email: [\r\n        this.formdata.email,\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      designation: [this.formdata.designation],\r\n      department: [this.formdata.department],\r\n      address: [this.formdata.address],\r\n      dob: [this.formdata.dob, [Validators.required]],\r\n      education: [this.formdata.education],\r\n      uploadImg: [this.formdata.uploadImg],\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { AllroomComponent } from './all-rooms/all-rooms.component';\r\nimport { AddRoomComponent } from './add-room/add-room.component';\r\nimport { EditRoomComponent } from './edit-room/edit-room.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: 'all-rooms',\r\n    component: AllroomComponent\r\n  },\r\n  {\r\n    path: 'add-room',\r\n    component: AddRoomComponent\r\n  },\r\n  {\r\n    path: 'edit-room',\r\n    component: EditRoomComponent\r\n  },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class RoomRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatPaginatorModule } from '@angular/material/paginator';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatSortModule } from '@angular/material/sort';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { MatCheckboxModule } from '@angular/material/checkbox';\r\nimport { RoomRoutingModule } from './rooms-routing.module';\r\nimport { AllroomComponent } from './all-rooms/all-rooms.component';\r\nimport { DeleteDialogComponent } from './all-rooms/dialogs/delete/delete.component';\r\nimport { FormDialogComponent } from './all-rooms/dialogs/form-dialog/form-dialog.component';\r\nimport { AddRoomComponent } from './add-room/add-room.component';\r\nimport { EditRoomComponent } from './edit-room/edit-room.component';\r\nimport { MaterialFileInputModule } from 'ngx-material-file-input';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { RoomService } from './all-rooms/rooms.service';\r\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AllroomComponent,\r\n    DeleteDialogComponent,\r\n    FormDialogComponent,\r\n    AddRoomComponent,\r\n    EditRoomComponent,\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    MatTableModule,\r\n    MatPaginatorModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatSnackBarModule,\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatDialogModule,\r\n    MatSortModule,\r\n    MatToolbarModule,\r\n    MatSelectModule,\r\n    MatDatepickerModule,\r\n    MatCheckboxModule,\r\n    MaterialFileInputModule,\r\n    MatMenuModule,\r\n    MatProgressSpinnerModule,\r\n    RoomRoutingModule,\r\n  ],\r\n  providers: [RoomService],\r\n})\r\nexport class RoomModule {}\r\n"]}