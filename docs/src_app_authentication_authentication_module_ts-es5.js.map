{"version":3,"sources":["webpack:///src/app/authentication/authentication-routing.module.ts","webpack:///src/app/authentication/authentication.module.ts","webpack:///src/app/authentication/forgot-password/forgot-password.component.html","webpack:///src/app/authentication/forgot-password/forgot-password.component.ts","webpack:///src/app/authentication/locked/locked.component.html","webpack:///src/app/authentication/locked/locked.component.ts","webpack:///src/app/authentication/page500/page500.component.ts","webpack:///src/app/authentication/page500/page500.component.html","webpack:///src/app/authentication/signin/signin.component.html","webpack:///src/app/authentication/signin/signin.component.ts","webpack:///src/app/authentication/signup/signup.component.html","webpack:///src/app/authentication/signup/signup.component.ts"],"names":["routes","path","redirectTo","pathMatch","component","SigninComponent","SignupComponent","ForgotPasswordComponent","LockedComponent","Page404Component","Page500Component","AuthenticationRoutingModule","RouterModule","AuthenticationModule","CommonModule","FormsModule","ReactiveFormsModule","MatFormFieldModule","MatInputModule","MatIconModule","MatButtonModule","formBuilder","router","submitted","loginForm","group","username","Validators","controls","invalid","navigate","onSubmit","hide","password","authService","error","login","f","value","subscribe","res","token","currentUserValue","auth","chide","email","cpassword","console","log","register","registeredData","alert"],"mappings":"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","file":"src_app_authentication_authentication_module_ts-es5.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { Page500Component } from './page500/page500.component';\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    redirectTo: 'signin',\r\n    pathMatch: 'full'\r\n  },\r\n  {\r\n    path: 'signin',\r\n    component: SigninComponent\r\n  },\r\n  {\r\n    path: 'signup',\r\n    component: SignupComponent\r\n  },\r\n  {\r\n    path: 'forgot-password',\r\n    component: ForgotPasswordComponent\r\n  },\r\n  {\r\n    path: 'locked',\r\n    component: LockedComponent\r\n  },\r\n  {\r\n    path: 'page404',\r\n    component: Page404Component\r\n  },\r\n  {\r\n    path: 'page500',\r\n    component: Page500Component\r\n  }\r\n];\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthenticationRoutingModule {}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { AuthenticationRoutingModule } from './authentication-routing.module';\r\nimport { Page500Component } from './page500/page500.component';\r\nimport { Page404Component } from './page404/page404.component';\r\nimport { SigninComponent } from './signin/signin.component';\r\nimport { SignupComponent } from './signup/signup.component';\r\nimport { LockedComponent } from './locked/locked.component';\r\nimport { ForgotPasswordComponent } from './forgot-password/forgot-password.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatButtonModule } from '@angular/material/button';\r\n@NgModule({\r\n  declarations: [\r\n    Page500Component,\r\n    Page404Component,\r\n    SigninComponent,\r\n    SignupComponent,\r\n    LockedComponent,\r\n    ForgotPasswordComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n    AuthenticationRoutingModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatIconModule,\r\n    MatButtonModule\r\n  ]\r\n})\r\nexport class AuthenticationModule {}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title p-b-45\">\r\n          Reset Password\r\n        </span>\r\n        <span class=\"error-subheader2 p-t-20 p-b-15\">\r\n          Enter your registered email address.\r\n        </span>\r\n        <div class=\"form-group mb-5\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Username</mat-label>\r\n            <input matInput formControlName=\"username\" required>\r\n            <mat-icon matSuffix>face</mat-icon>\r\n            <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\r\n              Username is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Reset My Password\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-25 text-center\">\r\n          <div>\r\n            <a routerLink=\"/authentication/signin\" class=\"txt1\">\r\n              Login?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-forgot-password',\r\n  templateUrl: './forgot-password.component.html',\r\n  styleUrls: ['./forgot-password.component.scss'],\r\n})\r\nexport class ForgotPasswordComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <div class=\"login100-form-logo\">\r\n          <div class=\"image\">\r\n            <img src=\"assets/images/usrbig.jpg\" alt=\"User\">\r\n          </div>\r\n        </div>\r\n        <span class=\"login100-form-title p-b-34 p-t-27\">\r\n          Emily Smith\r\n        </span>\r\n        <div class=\"text-center\">\r\n          <p class=\"txt1 p-b-20\">\r\n            Locked\r\n          </p>\r\n        </div>\r\n        <div class=\"form-group mb-3\">\r\n          <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n            <mat-label>Password</mat-label>\r\n            <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n            <mat-icon matSuffix (click)=\"hide = !hide\">\r\n              {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n            <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n              Password is required\r\n            </mat-error>\r\n          </mat-form-field>\r\n        </div>\r\n        <div class=\"container-login100-form-btn p-t-30\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\n@Component({\r\n  selector: 'app-locked',\r\n  templateUrl: './locked.component.html',\r\n  styleUrls: ['./locked.component.scss'],\r\n})\r\nexport class LockedComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  constructor(private formBuilder: FormBuilder, private router: Router) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      password: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n@Component({\r\n  selector: 'app-page500',\r\n  templateUrl: './page500.component.html',\r\n  styleUrls: ['./page500.component.scss']\r\n})\r\nexport class Page500Component implements OnInit {\r\n  constructor() {}\r\n  ngOnInit() {}\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form\">\r\n        <span class=\"error-header p-b-45\">\r\n          500\r\n        </span>\r\n        <span class=\"error-subheader2 p-b-5\">\r\n          Oops, Something went wrong. Please try after some times.\r\n        </span>\r\n        <div class=\"container-login100-form-btn p-t-30\t\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\">\r\n            Go To Home Page\r\n          </button>\r\n        </div>\r\n        <div class=\"w-full p-t-15 p-b-15 text-center\">\r\n          <div>\r\n            <a href=\"#\" class=\"txt1\">\r\n              Need Help?\r\n            </a>\r\n          </div>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-04.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title pb-5\">\r\n          Login\r\n        </span>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Username</mat-label>\r\n              <input matInput formControlName=\"username\" />\r\n              <mat-icon matSuffix>face</mat-icon>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"row\">\r\n          <div class=\"col-xl-12col-lg-12 col-md-12 col-sm-12 mb-2\">\r\n            <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n              <mat-label>Password</mat-label>\r\n              <input matInput [type]=\"hide ? 'password' : 'text'\" formControlName=\"password\">\r\n              <a class=\"show-pwd-icon\" href=\"#\" onClick=\"return false;\" matSuffix (click)=\"hide = !hide\"\r\n                [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\r\n                <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n              </a>\r\n            </mat-form-field>\r\n          </div>\r\n        </div>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div class=\"form-check\">\r\n            <label class=\"form-check-label\">\r\n              <input class=\"form-check-input\" type=\"checkbox\" value=\"\"> Remember me\r\n              <span class=\"form-check-sign\">\r\n                <span class=\"check\"></span>\r\n              </span>\r\n            </label>\r\n          </div>\r\n          <div>\r\n            <a class=\"txt1\" routerLink=\"/authentication/forgot-password\">Forgot Password?</a>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Login\r\n          </button>\r\n        </div>\r\n        <div *ngIf=\"error\" class=\"alert alert-danger mt-3 mb-0\">{{error}}</div>\r\n        <div class=\"text-center p-t-30 p-b-20\">\r\n          <span class=\"txt3\">\r\n            or <a routerLink=\"/authentication/signup\">\r\n              sign up\r\n            </a> using\r\n          </span>\r\n        </div>\r\n        <div class=\"login100-form-social flex-c-m\">\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-01.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\n@Component({\r\n  selector: 'app-signin',\r\n  templateUrl: './signin.component.html',\r\n  styleUrls: ['./signin.component.scss'],\r\n})\r\nexport class SigninComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  error = '';\r\n  hide = true;\r\n  constructor(\r\n    private formBuilder: FormBuilder,\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['admin', Validators.required],\r\n      password: ['admin', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    this.error = '';\r\n    if (this.loginForm.invalid) {\r\n      this.error = 'Username and Password not valid !';\r\n      return;\r\n    } else {\r\n      this.authService\r\n        .login(this.f.username.value, this.f.password.value)\r\n        .subscribe(\r\n          (res) => {\r\n            if (res) {\r\n              const token = this.authService.currentUserValue.token;\r\n              if (token) {\r\n                this.router.navigate(['/dashboard/main']);\r\n              }\r\n            } else {\r\n              this.error = 'Invalid Login';\r\n            }\r\n          },\r\n          (error) => {\r\n            this.error = error;\r\n            this.submitted = false;\r\n          }\r\n        );\r\n    }\r\n  }\r\n}\r\n","<div class=\"limiter\">\r\n  <div class=\"container-login100\">\r\n    <div class=\"wrap-login100\">\r\n      <form class=\"login100-form validate-form\" [formGroup]=\"loginForm\" (ngSubmit)=\"onSubmit()\">\r\n        <span class=\"login100-form-title p-b-30\">\r\n          Register\r\n        </span>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Username</mat-label>\r\n          <input matInput formControlName=\"username\" required>\r\n          <mat-icon matSuffix>face</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('username').hasError('required')\">\r\n            Username is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Email</mat-label>\r\n          <input matInput formControlName=\"email\" required>\r\n          <mat-icon matSuffix>mail</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('email').hasError('required') || loginForm.get('email').touched\">\r\n            Please enter a valid email address\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Password</mat-label>\r\n          <input matInput formControlName=\"password\" [type]=\"hide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"hide = !hide\">\r\n            {{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('password').hasError('required')\">\r\n            Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <mat-form-field class=\"example-full-width\" appearance=\"outline\">\r\n          <mat-label>Confirm Password</mat-label>\r\n          <input matInput formControlName=\"cpassword\" [type]=\"chide ? 'password' : 'text'\" required>\r\n          <mat-icon matSuffix (click)=\"chide = !chide\">\r\n            {{chide ? 'visibility_off' : 'visibility'}}</mat-icon>\r\n          <mat-error *ngIf=\"loginForm.get('cpassword').hasError('required')\">\r\n            Confirm Password is required\r\n          </mat-error>\r\n        </mat-form-field>\r\n        <div class=\"flex-sb-m w-full p-t-15 p-b-20\">\r\n          <div>\r\n            <span>Already Registered? <a routerLink=\"/authentication/signin\">\r\n                Login\r\n              </a></span>\r\n          </div>\r\n        </div>\r\n        <div class=\"container-login100-form-btn\">\r\n          <button mat-flat-button color=\"primary\" class=\"login100-form-btn\" type=\"submit\">\r\n            Register\r\n          </button>\r\n        </div>\r\n        <div class=\"text-center p-t-30 p-b-20\">\r\n          <span class=\"txt2\">\r\n            or sign up using\r\n          </span>\r\n        </div>\r\n        <div class=\"login100-form-social flex-c-m\">\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg1 m-r-5\">\r\n            <i class=\"fab fa-facebook-f\"></i>\r\n          </a>\r\n          <a href=\"#\" class=\"login100-form-social-item flex-c-m bg2 m-r-5\">\r\n            <i class=\"fab fa-twitter\"></i>\r\n          </a>\r\n        </div>\r\n      </form>\r\n      <div class=\"login100-more\" style=\"background-image: url('assets/images/pages/bg-02.png');\">\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { AuthService } from 'src/app/core/service/auth.service';\r\n@Component({\r\n  selector: 'app-signup',\r\n  templateUrl: './signup.component.html',\r\n  styleUrls: ['./signup.component.scss'],\r\n})\r\nexport class SignupComponent implements OnInit {\r\n  loginForm: FormGroup;\r\n  submitted = false;\r\n  returnUrl: string;\r\n  hide = true;\r\n  chide = true;\r\n  constructor(private formBuilder: FormBuilder, private router: Router, private auth: AuthService) { }\r\n  ngOnInit() {\r\n    this.loginForm = this.formBuilder.group({\r\n      username: ['', Validators.required],\r\n      email: [\r\n        '',\r\n        [Validators.required, Validators.email, Validators.minLength(5)],\r\n      ],\r\n      password: ['', Validators.required],\r\n      cpassword: ['', Validators.required],\r\n    });\r\n  }\r\n  get f() {\r\n    return this.loginForm.controls;\r\n  }\r\n  onSubmit() {\r\n    this.submitted = true;\r\n    // stop here if form is invalid\r\n    if (this.loginForm.invalid) {\r\n      return;\r\n    } else {\r\n      console.log(this.loginForm.value)\r\n      this.auth.register(this.loginForm.value).subscribe((registeredData)=>{\r\n        console.log(registeredData,39);\r\n        alert(registeredData);\r\n      })\r\n      // this.router.navigate(['/dashboard/main']);\r\n    }\r\n  }\r\n}\r\n"]}